<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-12-30T12:09:06+08:00</updated><id>http://localhost:4000//</id><title type="html">夏虫</title><subtitle>夏天的一条虫</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2016/12/29/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2016-12-29T22:44:01+08:00</published><updated>2016-12-29T22:44:01+08:00</updated><id>http://localhost:4000/jekyll/update/2016/12/29/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/12/29/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">为什么移除了滚动隐藏导航栏的功能？</title><link href="http://localhost:4000/jekyll/update/2016/12/17/why-remove-scrolling-hide-navigationabr-function.html" rel="alternate" type="text/html" title="为什么移除了滚动隐藏导航栏的功能？" /><published>2016-12-17T22:44:01+08:00</published><updated>2016-12-17T22:44:01+08:00</updated><id>http://localhost:4000/jekyll/update/2016/12/17/why-remove-scrolling-hide-navigationabr-function</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/12/17/why-remove-scrolling-hide-navigationabr-function.html">&lt;p&gt;说起这个问题，我们应该先想想：我们为什么要隐藏导航栏？原因是隐藏了之后，页面的展示空间变得更大了，用户可以看到更多内容。但是这个页面并不是完整的，隐藏了导航栏，会给人一种不知身在何处的错觉。
因此，这个功能最好用在导航控制器的第一个页面上，因为第一个页面无需返回按钮，所以即使不展示导航栏，也是OK的。Music应用就是这么做的。&lt;/p&gt;

&lt;p&gt;如果非要这么做的话，那就要注意这种“隐藏”状态只是一个临时的中间状态，其他非浏览操作都必须恢复原始的状态，这就是为什么当你在全屏状态下的时候，无法通过左侧的边缘滑动手势返回到上一个页面，而必须先通过一次下滑操作使导航栏显示出来。&lt;/p&gt;

&lt;p&gt;非开发人员可能会问：为什么要多此一举，这个时候右滑返回有什么问题吗？这里有几点要说明一下。首先，从交互设计上来看，这种滑动返回很难提供一致性的体验。当前页面隐藏了导航栏，但是上一个页面却不一定。如果不一致，那样就会有一个过渡效果，那样不太好看。另外一点，iOS系统禁止在导航栏隐藏情况下右滑返回。当然，开发者也可以使用自己添加手势的方式绕过这个问题（实际上在saralin 1.8.2的开发前期我已经实现了这个），但是依然无法回避前述第一个问题，效果比较拙劣。&lt;/p&gt;

&lt;p&gt;导航栏的变化还有另一种方式，那就是改变透明度。效果如下：刚打开页面的时候，导航栏正常显示，当页面往上滚动到一定位置的时候，导航栏变的透明（有时候会有个渐变效果）。手机QQ里面的空间就是用的这种效果。&lt;/p&gt;</content><summary type="html">说起这个问题，我们应该先想想：我们为什么要隐藏导航栏？原因是隐藏了之后，页面的展示空间变得更大了，用户可以看到更多内容。但是这个页面并不是完整的，隐藏了导航栏，会给人一种不知身在何处的错觉。
因此，这个功能最好用在导航控制器的第一个页面上，因为第一个页面无需返回按钮，所以即使不展示导航栏，也是OK的。Music应用就是这么做的。</summary></entry><entry><title type="html">HTML应用的缺陷有哪些？</title><link href="http://localhost:4000/jekyll/update/2016/12/11/drawbacks-of-html-applications.html" rel="alternate" type="text/html" title="HTML应用的缺陷有哪些？" /><published>2016-12-11T22:44:01+08:00</published><updated>2016-12-11T22:44:01+08:00</updated><id>http://localhost:4000/jekyll/update/2016/12/11/drawbacks-of-html-applications</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/12/11/drawbacks-of-html-applications.html">&lt;p&gt;首先声明，我不是一个前端开发，虽然我自己对前端技术很感兴趣，但是我自己也只是懂一点点皮毛，大部分问题还是靠Google，SO和MDN来解决。另外，我自己对框架完全不了解，最近在看angularJS。这里仅说说我在saralin开发中遇到的的自己觉得不太爽的一些例子。&lt;/p&gt;
&lt;h2 id=&quot;滚动加载更多的问题&quot;&gt;滚动加载更多的问题&lt;/h2&gt;
&lt;p&gt;Saralin的帖子详情页面是通过webview加载一个静态网页来展示的。在saralin早先版本中，网页加载完毕之后，页面就不再与webview控制器（webview controller）交互了。在1.8版本中，我加入了动态加载更多内容这一功能。1.8.1加入了向下加载更多，1.8.2加入了向上（即反向）加载更旧的内容，问题主要出在后者。
为了保持在插入新的dom节点之后页面停留在原位置不动，我们需要修改页面的scroll offset，类似下面这样：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oldHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientHeight&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oldScrollOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//insert new dom&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientHeight&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newScrollOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//set offset&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newScrollOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newHeight&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;–&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oldHeight&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;问题在于有时候这样做会失效，导致页面直接滚动到了最顶端。我怀疑是因为我自己手指仍停留在网页上，所以滚动并没有终止，iOS系统为了保持滚动的连贯性，会自动设置网页scrollView的scrollOffset，而这一操作在我设置scrollTop之后，从而导致我的设置被覆盖了。
为了解决这个问题，我现在将插入dom节点的时机选在松手之后（即页面的touchend事件），当然如果当时已经没有手指放在屏幕上，那就直接插入dom节点，然后设置scrollTop属性。&lt;/p&gt;
&lt;h2 id=&quot;数据刷新的问题&quot;&gt;数据刷新的问题&lt;/h2&gt;
&lt;p&gt;我一直想把帖子详情页面做成一个类似于原生的UITableView一样的组件。但是在开发过程中,我发现了一些功能上的不足。
首先是缺少一种数据刷新的回调。UITableView可以通过各种delegate方法来获知cell重新被展示，但是web却只有一个onload事件。当我滚动到某一个element显示的时候，我无法对这个element变更外观。例如，一个展示发帖时间的span，我总不可能在页面初始化设置好了之后就不再改变这个值了吧？除非显示绝对时间，但是那种时间格式太难看了（“2016-11-23 12:45”，我觉得我宁愿不要看到这样子的时间）。一般都是显示模糊时间，例如“3分钟前”。我很奇怪为什么HTML没有一种可以定时收到回调的element,那样的话就可以完美解决上述问题。我现在的做法是定时遍历所有时间span，然后逐个更新。&lt;/p&gt;

&lt;h2 id=&quot;onscroll回调事件&quot;&gt;onscroll回调事件&lt;/h2&gt;
&lt;p&gt;onscroll事件在UIWebview和WKWebview中行为不一样，在UIWebview中，onscroll回调事件在滚动的中途并不会被调用，而WKWebview不存在这一问题。参见：&lt;a href=&quot;https://github.com/twbs/bootstrap/issues/16202&quot;&gt;Affix doesn’t update in iOS UIWebview&lt;/a&gt;&lt;/p&gt;</content><summary type="html">首先声明，我不是一个前端开发，虽然我自己对前端技术很感兴趣，但是我自己也只是懂一点点皮毛，大部分问题还是靠Google，SO和MDN来解决。另外，我自己对框架完全不了解，最近在看angularJS。这里仅说说我在saralin开发中遇到的的自己觉得不太爽的一些例子。
滚动加载更多的问题
Saralin的帖子详情页面是通过webview加载一个静态网页来展示的。在saralin早先版本中，网页加载完毕之后，页面就不再与webview控制器（webview controller）交互了。在1.8版本中，我加入了动态加载更多内容这一功能。1.8.1加入了向下加载更多，1.8.2加入了向上（即反向）加载更旧的内容，问题主要出在后者。
为了保持在插入新的dom节点之后页面停留在原位置不动，我们需要修改页面的scroll offset，类似下面这样：</summary></entry></feed>
